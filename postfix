#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;ctype.h&gt;

#define MAX 100

typedef struct
{
int arr[MAX];
int top;
} Stack;

void initStack(Stack* s)
{
s-&gt;top = -1;
}

int isEmpty(Stack* s)
{
return s-&gt;top == -1;
}

void push(Stack* s, int item)
{
s-&gt;arr[++s-&gt;top] = item;
}

int pop(Stack* s) {
return s-&gt;arr[s-&gt;top--];
}

int evaluatePostfix(char* expression)
{
Stack stack;
initStack(&amp;stack);

for (int i = 0; expression[i] != &#39;\0&#39;; i++)
{
char token = expression[i];

if (isdigit(token))
{
push(&amp;stack, token - &#39;0&#39;);
} else
{
int op2 = pop(&amp;stack);
int op1 = pop(&amp;stack);
switch (token)
{
case &#39;+&#39;:
push(&amp;stack, op1 + op2);
break;
case &#39;-&#39;:
push(&amp;stack, op1 - op2);
break;
case &#39;*&#39;:
push(&amp;stack, op1 * op2);
break;
case &#39;/&#39;:
push(&amp;stack, op1 / op2);
break;
}

}
}
return pop(&amp;stack);
}

int main() {
char expression[MAX];

printf(&quot;Enter a postfix expression: &quot;);
fgets(expression, MAX, stdin);
expression[strcspn(expression, &quot;\n&quot;)] = 0;

int result = evaluatePostfix(expression);
printf(&quot;Result: %d\n&quot;, result);

return 0;
}
