#include <stdio.h>
#include <stdlib.h>


struct Node 
{
    int data;
    struct Node* next;
};


struct Node* createNode(int data) 
{
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}


struct Node* createCSLL(int arr[], int n)
{
    if (n == 0) return NULL;

    struct Node* head = createNode(arr[0]);
    struct Node* last = head;

    for (int i = 1; i < n; i++) 
    {
        struct Node* newNode = createNode(arr[i]);
        last->next = newNode;
        last = newNode;
    }

    last->next = head; 
    return head;
}


void traverseCSLL(struct Node* head) {
    if (head == NULL) {
        printf("List is empty.\n");
        return;
    }

    struct Node* temp = head;
    do {
        printf("%d -> ", temp->data);
        temp = temp->next;
    } while (temp != head);
    printf("(head)\n");
}


int main() 
{
    int arr[] = {10, 20, 30, 40, 50};
    int n = sizeof(arr) / sizeof(arr[0]);

    
    struct Node* head = createCSLL(arr, n);

    
    printf("Circular Singly Linked List: ");
    traverseCSLL(head);

    

    return 0;
}
