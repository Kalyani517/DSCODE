#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;

struct Node
{
int data;
struct Node* next;
};

struct Stack
{
struct Node* top;
};

struct Stack* createStack()
{
struct Stack* stack = (struct Stack*)malloc(sizeof(struct Stack));
stack-&gt;top = NULL;
return stack;
}

int isEmpty(struct Stack* stack)
{
return stack-&gt;top == NULL;
}

void push(struct Stack* stack, int data)
{

struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
if (newNode == NULL)

{
printf(&quot;Memory allocation failed\n&quot;);
return;
}

newNode-&gt;data = data;
newNode-&gt;next = stack-&gt;top;
stack-&gt;top = newNode;
}

void display(struct Stack* stack)
{
struct Node* current = stack-&gt;top;
if (isEmpty(stack))
{
printf(&quot;Stack is empty\n&quot;);
return;
}
printf(&quot;Stack elements: &quot;);
while (current != NULL) {
printf(&quot;%d &quot;, current-&gt;data);
current = current-&gt;next;
}
printf(&quot;\n&quot;);
}

int main()
{
struct Stack* stack = createStack();
push(stack, 10);
push(stack, 20);

push(stack, 30);

display(stack);
return 0;
}
